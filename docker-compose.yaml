version: '3.8'
services:
  db_auth:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=dss
      - POSTGRES_PASSWORD=dss
      - POSTGRES_DB=users
    ports:
      - '5432:5432'
    volumes: 
      - db_auth:/var/lib/postgresql/data
      - ./authMicroservice/database:/docker-entrypoint-initdb.d

  db_vehicles:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=dss
      - POSTGRES_PASSWORD=dss
      - POSTGRES_DB=vehicles
    ports:
      - '5433:5432'
    volumes: 
      - db_vehicles:/var/lib/postgresql/data
      - ./vehiclesMicroservice/src/database:/docker-entrypoint-initdb.d
  db_stands:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=dss
      - POSTGRES_PASSWORD=dss
      - POSTGRES_DB=stands
    ports:
      - '5434:5432'
    volumes: 
      - db_stands:/var/lib/postgresql/data
      - ./standsMicroservice/src/database:/docker-entrypoint-initdb.d

  db_sales:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=dss
      - POSTGRES_PASSWORD=dss
      - POSTGRES_DB=sales
    ports:
      - '5435:5432'
    volumes: 
      - db_sales:/var/lib/postgresql/data
      - ./salesMicroservice/database:/docker-entrypoint-initdb.d
  

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    
  vehicles:
    build:
      context: ./vehiclesMicroservice
      dockerfile: Dockerfile
    
    ports:
      - '3003:3003'
    env_file:
      - ./envs/vehicles.env
    volumes:
      -   ./shared/photos:/usr/src/app/src/static/photos:rw
    depends_on:
      - db_vehicles
      - apache
  
  stands:
    build:
      context: ./standsMicroservice
      dockerfile: Dockerfile
    
    ports:
      - '3000:3000'
    env_file:
      - ./envs/stands.env
    depends_on:
      - db_stands
      - apache
  sales:
    build:
      context: ./salesMicroservice
      dockerfile: Dockerfile
    
    ports:
      - '3004:3004'
    env_file:
      - ./envs/sales.env
    depends_on:
      - db_sales
      - apache

  auth:
    build:
      context: ./authMicroservice
      dockerfile: Dockerfile
    
    ports:
      - '3001:3001'
    env_file:
      - ./envs/auth.env
    volumes:
      -   ./shared/profile:/usr/src/app/src/static/profile:rw
    depends_on:
      - db_auth
      - apache
  apache:
    build:
      context: ./apache-server
      dockerfile: Dockerfile
      
    volumes:
      - ./shared:/usr/local/apache2/htdocs:ro
    ports:
      - "8080:80"
    
volumes:
  db_auth:
  db_vehicles:
  db_stands:
  db_sales:
  shared_volume:
  

